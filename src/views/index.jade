!!! 5
//if IE 7
  html(lang="en", class="no-js ie", data-ng-app="main", id="ng-app")
//if IE 8
  html(lang="en", class="no-js ie", data-ng-app="main", id="ng-app")
//if IE 9
  html(lang="en", class="no-js ie9", data-ng-app="main", id="ng-app")
//if [(gt IE 9)|!(IE)] <!
html(class="no-js", ng-app="main")
  // <![endif]
  head
    meta(charset="utf-8")
    title Gradle Introduction
    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black-translucent")
    meta(name="description", content="Gradle Introduction 2013")
    link(href="./assets/css/style.css", rel="stylesheet", type="text/css")

  body
    .reveal
      .slides
        section
          section.index-section(data-state="index-slide")
            img(src="assets/img/goldilocks.jpg")
            h2 Goldilocks would use gradle 
            div an introduction to gradle 
            div by Matt Payne
            div 10/15/2013
            ul
             h6 Updated Tue Nov  5 12:13:14 CST 2013


          section
            h2
              i.icon-github
            ul
              li Want updates about talk revisions?  Have some feedback about this talk?   Please!!!
              ul
                li 
                  a(href="https://docs.google.com/forms/d/14fwdHrOJ0toTmEOZa_mmdb6t1CDv0vm-L1ntf7Fn194/viewform", target="_blank") Please register for updates
              li These slides are up on GitHub!  
              ul
                li 
                  a(href="http://payne.github.io/GradleIntro2013", target="_blank") payne.github.io/GradleIntro2013
              li Source for these slides is also on GitHub 
              ul 
                li
                  a(href="https://github.com/payne/GradleIntro2013", target="_blank") github.com/payne/GradleIntro2013
              li This slide deck started life as a clone of Jeff Sheets' August 2013 talk
              ul
                li 
                  a(href="http://jeffsheets.github.io/JavaTesting2013Slides", target="_blank") jeffsheets/JavaTesting2013Slides
                ul
                  li Many, many thanks Jeff!

          section
            h2 About Me
            ul
              li 
                | Software Engineer at 
                a(href="http://www.Solutionary.com",target="_blank") Solutionary
              li 
                i.icon-twitter &nbsp;
                a(href="https://twitter.com/MattPayneOrg", target="_blank") @MattPayneOrg
              li 
                i.icon-github &nbsp;
                a(href="https://github.com/payne", target="_blank") @payne
                li 
                  a(href="http://MattPayne.org/", target="_blank") http://MattPayne.org
                li Payne@MattPayne.org
                
        section
            h2 Talk Outline 
            ol
              li 5WH: What, Why, Where, Who, When, and How
              li Using and demoing gradle 
                i.icon-smile
              ol
                //TODO: type=a
                li From scatch
                li Eclipse Plugin
                li What about maven and ant?
                li Multiproject builds
                li Multiple language builds
              li Review shortcuts, tips, and tricks
              li Maven broken?
              li gradle-1.7/samples
              li References

              hr
              h3 Please ask questions and make suggestions!
              ul
                li "Everyone in this room is an expert!" 
                  ul
                    li Jeff Sheets' great observation from 8/20/2013

        section
            section
                h2 What is gradle?
                h3 Google points to gradle's wikipedia entry:
                p Gradle is a project automation tool that builds upon the concepts of Apache Ant and Apache Maven and introduces a Groovy-based DSL instead of the more traditional XML form of declaring the project configuration. -- 
                  a(href="http://en.wikipedia.org/wiki/Gradle",target="_blank") http://en.wikipedia.org/wiki/Gradle
                hr
                h3 I say:
                ol
                  li don't prototype with maven: use gradle.   
                  li When you have a choice between ant, maven, and gradle: choose gradle.


            section
                h2 There are lots of build systems
                p Build tools recognized by Search.Maven.org
                ol
                    li Maven
                    li Buildr
                    li Ivy
                    li Google Grape
                    li Grails (aka Gradle)
                    li Scala SBT
                p and there are many more still...  For example 
                  a(href="http://docs.waf.googlecode.com/git/book_17/single.html",target="_blank") WAF
                ul
                    li Used by node.js and Samba.org


        section
                section
                    h2 Why use gradle?
                    ol
                      li Gradle manifesto:
                      div Make the impossible possible, make the possible easy and make the easy elegant.
                        ul
                          li (inspired by Moshe Feldenkrais)


                section
                  h2 philosophy and theory
                  ol
                    li 
                      a(href="http://en.wikipedia.org/wiki/Technology_acceptance_model",target="_blank") Technology Acceptance Model (TAM) 
                    ul
                      li Perceived usefulness
                      li Perceived ease-of-use
                    li Network effect 
                    ul
                      li
                        a(href="http://en.wikipedia.org/wiki/Network_effect",target="_blank") the value of a product or service is dependent on the number of others using it.


        section
            h2 Where is gradle being used?
            ol
              li Adoption curves 
               a(href="http://en.wikipedia.org/wiki/Technology_adoption_lifecycle",target="_blank")
                img(src="http://upload.wikimedia.org/wikipedia/en/4/45/DiffusionOfInnovation.png")
              li Add the list of projects and companies that use gradle
              ul
                li Hibernate, spring, spring source, Tahles, Siemens, LinkedIn, etc

        section
            h2 Who is who in the gradle zoo?
            ol 
              li 
               a(href="http://www.gradleware.com/team",target="_blank") http://www.gradleware.com/team
              li 
               a(href="http://GradleWare.com",target="_blank") GradleWare.com
              li Tim Berglund -- Great books and articles

        section
            h2 When is gradle ready to use?
            h1 Now
            ol 
              li One can have gradle doing builds while ant or maven are also doing builds
              li 
                a(href="http://www.gradle.org/roadmap",target="_blank") Roadmap
              li
                a(href="http://www.gradle.org/events", target="_blank") Events

        section
          section
              h2 How to get started using gradle? From...
              ol 
                li Command line
                li Eclipse
                li maven
                li ant
                li multi project
                li multi language

          section
              h2 Gradle on the command line
              ol
                li Hello world project
                li Turning project into an eclipse project

          section
            h2 First gradle: the source
            div Hello.java
            pre.
              <code data-trim contenteditable>
              package demo;

              /* ... */
              public class Hello {
    
                public static void main(String[] args) {
                  System.out.format("Hello world\n");
                }
              }
              </code>

          section
            h2 First gradle: the build file
            div build.gradle
            pre.
              <code data-trim contenteditable>
              apply plugin: 'java'
              </code>

          section
              h2 First gradle: the session
              pre.
                <code data-trim contenteditable>
                mkdir -p src/main/java/demo
                cat > src/main/java/demo/Hello.java 
                cat > gradle.build
                tree
                gradle build
                gradle build
                gradle --daemon build
                gradle build
                java -cp build/libs/first.jar demo.Hello
                </code>
              ol
                li Let's note the timing differences
                  ul
                    li Tip 1: gradle's daemon makes things "faster"
                li gradle build does several things
                  ul
                    li Compile
                    li Build jar
                    li Run tests
                    li Build test report
                

          section
            h2 That's a lot of files
            ol 
              li gradle clean; find * | wc -l # output 6
              li gradle build; find * | wc -l # output 17
              img(src="assets/img/tree1.png")

          section
            h3 gradle tasks: That's a lot of tasks
            h3 Not a lot of gradle
            pre.
              <code>
              mpayne-mbp:first mpayne$ cat build.gradle 
              apply plugin: 'java'
              mpayne-mbp:first mpayne$
              </code>
          section
            h2 special tasks
            h3 Build Setup tasks
            ol
              li setupBuild - Initializes a new Gradle build. [incubating]
              ul
                li Generates directory tree and sample build file
              li wrapper - Generates Gradle wrapper files. [incubating]
                ul
                  li Generates shell/batch script that downloads gradle for you.
                  li Wonderful if you continous integration (CI) server does not directly support gradle.  Also if you want to share a script with someone who may not have gradle.
              li And, there's a gui: <b>gradle --gui</b>

          section
            h2 Dependency management: the source
            div MainDemoBeanUtils.java
            pre.
              <code data-trim contenteditable>
              package demo;
              import org.apache.commons.beanutils.BeanUtils;

              /* ... */
              public class MainBeanUtilsDemo {
                private String jdbcDriverClass, dbUrl, dbUser, dbPassword;
    
                public MainBeanUtilsDemo(String[] args) throws FileNotFoundException,
                  IOException, IllegalAccessException, InvocationTargetException {

                  this.strPropertyFileName = args.length > 0 ? args[0] : "jdbc.properties";
                  Properties properties = new Properties();
                  properties.load(new FileReader(strPropertyFileName));
                  BeanUtils.populate(this, properties); // remember the accessors
                  System.out.format("user=%s password=%s\n", dbUser, dbPassword);
                }
              }
              </code>

          section
            h4 Dependency management: the build file
            div build.gradle
            pre.
              <code data-trim contenteditable>
              apply plugin: 'java'
              apply plugin: 'eclipse'
              repositories { mavenCentral() }

              dependencies { 
                  compile 'commons-beanutils:commons-beanutils:1.8.3'
              }
              </code>
            h4 LMGTFY.com
            ul 
             li Just google <b>gradle package or library name</b> for example:
             ul
                 li
                  a(href="http://lmgtfy.com/?q=gradle+commons+beanutils&l=1",target="_blank") gradle commons beanutils
                 li MVNrepository.com needs ad revenue...
             li 
              a(href="http://search.maven.org/#search%7Cga%7C1%7Ccommons%20beanutils",target="_blank") Maven.org is better

          section
            h2 What is that jar?
            div google the sha1sum or md5 of an unknown jar to find out what it's maven coordinates are
                 ul
                   li 
                    a(href="https://www.google.com/#q=50110a98f45c966e662bd9fbcf38031a",target="_blank") 50110a98f45c966e662bd9fbcf38031a

          section
              h2 Dependency management: the session
              pre.
                <code data-trim contenteditable>
                mkdir -p src/main/java/demo # redundant
                cat > src/main/java/demo/MainBeanUtilsDemo.java 
                cat > gradle.build
                echo 'org.gradle.daemon=true' > gradle.properties
                gradle eclipse # So we can import this into eclipse and fix it up a bit.
                gradle build # Don't need the --daemon now
                </code>
              ol
                li Tip 2: Use gradle.properties to always use the daemon
                  ul
                    li gradle's daemon makes things "faster"
                    li <b>ps -ef | egrep -i 'gradle'</b>
                li 
                  a(href="http://www.gradle.org/docs/current/userguide/build_environment.html",target="_blank") User Guide Chapter 20: The Build Environment
                
          section
            h2 Using gradle's eclipse plugin
            ol
              li add "apply plugin: 'eclipse'" to your build.gradle
              li gradle eclipse
              li In eclipse, import existing eclipse project
              li joy 
                i.icon-smile

            h2 Next, Using eclipse's gradle plugin

          section
              h2 Using eclipse's gradle plugin
              ol
                li 
                  a(href="http://www.gradle.org/tooling") Gradle tooling
                li 
                  a(href="https://marketplace.eclipse.org/content/gradle-integration-eclipse") Gradle Integration for Eclipse
                ul
                  li I did not install the Spring Dashboard
                  li github.com/spring-projects/eclipse-integration-gradle/
                li 
                  img(src="assets/img/eclipse-marketplace.png")
              

          section
              h2 Dependency management: Running 
              ul 
                li Let's use gradle to run our code 
                li Folks manage the classpath like this with ant and maven too...
              pre.
                <code data-trim contenteditable>
                defaultTasks 'BeanDemo'
                apply plugin: 'java'
                apply plugin: 'eclipse'
                repositories { mavenCentral() }

                dependencies { 
                    compile 'commons-beanutils:commons-beanutils:1.8.3'
                }

                task BeanDemo(type: JavaExec) {
                  main='demo.MainBeanUtilsDemo'
                  classpath=runtimeClasspath
                }
                </code>
              ol
                li gradle BeanDemo
                li gradle BD
                ul
                  li Tip 3: The CamelCaseShortCut (CCSC)


          section
              h2 maven
              ol
                li Gradle uses maven repos
                li Gradle can publish to maven repos
                 ul
                   li 
                    a(href="http://www.gradle.org/docs/current/userguide/maven_plugin.html",target="_blank") Use gradle's maven plugin
                   li apply plugin: 'maven'
                   li gradle install # publishes to local maven repo
                     ul
                      li This includes utilties to build a pom.xml for your artifact

          section
              h2 maven: Converting a maven project
              div Let's convert a simple mvn project to gradle.   For example 
              a(href="https://github.com/kohsuke/github-api") kohsuke/github-api
              ol
                li <b>git clone https://github.com/kohsuke/github-api.git</b>
                li <b>cd github-api</b>
                li <b>gradle setupBuild</b>
                li <b>vim pom.xml</b> # Remove parent & move groupID to top 
                li <b>less build.gradle</b>

          section
              h2 Reusing ant: ant.importBuild 'build.xml'
              pre.
                  <code data-trim contenteditable>
                  task zip << {
                    ant.zip(destfile: 'archive.zip') {
                        fileset(dir: 'src') {
                            include(name: '**.xml')
                            exclude(name: '**.java')
                        }
                      }
                  }
                  </code>
              a(href="http://www.gradle.org/docs/current/userguide/ant.html",target="_blank") Many ant examples in the user guide
              a(href="http://stackoverflow.com/questions/17415284/gradle-cant-execute-an-ant-target",target="_blank") Example from StackOverflow


        section
          section 
            h2 Good things to know
            ol
              li Build life cycle
              li Task api
              li The DSL is on top of groovy.   So, all of groovy is there
              li Groovy can be a lot like java

           section 
             h2 Build Life Cycle
             ol
               li Initialization
               li Configuration
               li Execution
             div
             a(href="http://www.gradle.org/docs/current/userguide/build_lifecycle.html",target="_blank") Chapter 55: The Build Lifecycle

           section 
             h2 Task API
             ol
               li build.gradle is a program
               li tasks are objects

           section 
             h2 Gradle DSL
             ol
               li 
                 a(href="http://www.gradle.org/docs/current/dsl/",target="_blank") Gradle DSL Reference
               li a simple groovy example
               li simple example java like

        section
            h2 Review shortcuts, tips, and tricks
            ul
              li Tip 1: daemon
               ul
                li gradle --daemon
              li Tip 2: gradle.properties
              ul
                li org.gradle.daemon=-true
              li Tip 3: The CamelCaseShortCut (CCSC)
              li Tip 4: default task
               ul
                li defaultTasks 'BeanDemo' # can be a comma seperated list
              li apply from http
              ul
                li common settings for projects on your whole team
              li github.com/spring-projects/eclipse-integration-gradle/
              li <b>--parallel</b> option runs unit tests in parallel

        section
            h2 Maven broken?
            ol
              li Some people think so
              li
                a(href="http://blog.ltgt.net/maven-is-broken-by-design/",target="_blank") Maven broken by design
              ul
                li 9/26/2013
              li This is why Goldilocks would use gradle
              li http://www.gradleware.com/news/blog/answering-more-gradle-v-maven-fud
              li Is gradle perfect?  Of course not! 
                i.icon-smile
              li Discussion?  Over beer?

        section
            h2 gradle-1.7/samples
            ol
              li webApplication
              li ear
              li groovy
              li java/multiproject
              li java/quickstart
              li java/customizedLayout
              li java/withIntegrationTests
                ul
                  li gradle integrationTest
              

        section
            h2 Free References
            ol
              li 
               a(href="http://www.gradle.org/learn",target="_blank") http://www.gradle.org/learn
              li 
               a(href="http://mrhaki.blogspot.com",target="_blank") http://mrhaki.blogspot.com
              li 
               a(href="http://www.gradle.org/book",target="_blank") gradle.org/book
            

    script(src="./assets/js/app.js")
